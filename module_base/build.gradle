if (!isNeedUserModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
//            abiFilters "armeabi", "armeabi-v7a", "x86"//, "arm64-v8a", "x86", "arm64-v8a", "x86_64"
            abiFilters "armeabi-v7a"
//            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (!isNeedUserModule.toBoolean()) {
                manifest.srcFile 'src/main/app/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    //360打包时需要加入这个，否则manifest文件中有警告会停止打包
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api rootProject.ext.dependencies["androidx.appcompat"]
    api rootProject.ext.dependencies["androidx.support.v4"]
    api rootProject.ext.dependencies["constraintlayout"]
    api rootProject.ext.dependencies["ahbottomnavigation"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["SmartRefreshLayout"]
    api rootProject.ext.dependencies["SmartRefreshHeader"]
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    api rootProject.ext.dependencies["fragmentation"]
    api rootProject.ext.dependencies["fragmentation-swipeback"]
    api rootProject.ext.dependencies["eventbus-activity-scope"]
    api rootProject.ext.dependencies["eventbus"]
    api 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'
    api 'de.hdodenhof:circleimageview:2.2.0'
    api 'me.jessyan:autosize:1.1.2'
    api ('cn.qqtheme.framework:WheelPicker:1.5.0') {
        exclude group: 'com.android.support'
    }
    api 'com.prolificinteractive:material-calendarview:1.4.3'
    api 'com.timehop.stickyheadersrecyclerview:library:0.4.3'

    api 'androidx.multidex:multidex:2.0.1'


    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["logging.interceptor"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    api rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    api 'com.amap.api:3dmap:6.8.0'
    api 'com.amap.api:map2d:5.2.0'
    api 'com.amap.api:search:6.5.0.1'
    api 'com.amap.api:location:4.5.1'


    api rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["test.runer"]
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
